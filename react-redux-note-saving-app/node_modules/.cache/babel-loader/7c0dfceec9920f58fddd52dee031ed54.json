{"ast":null,"code":"import uuid from 'uuid';\nimport { createStore } from 'redux';\nvar initialState = {\n  notes: []\n};\nvar ADD_NOTE = '[notes] Add a note to the application';\nvar ADD_ACTION = {\n  type: ADD_NOTE,\n  payload: {\n    id: uuid(),\n    title: title,\n    note: note\n  }\n};\n\nvar noteReducer = function noteReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_NOTE':\n      return Object.assign(state, {}, {\n        notes: state.notes.concat(action.payload)\n      });\n\n    default:\n      return state;\n      break;\n  }\n};\n\nvar store = createStore(noteReducer, initialState);\nexport { store, ADD_ACTION, ADD_NOTE };","map":{"version":3,"sources":["/home/oyewoas/Documents/Software Dev Learning/With Companies/LevelUp Academy/Software Dev Projects/github/Assignments/react-note-saving-app/src/reducers/noteReducer.js"],"names":["uuid","createStore","initialState","notes","ADD_NOTE","ADD_ACTION","type","payload","id","title","note","noteReducer","state","action","Object","assign","concat","store"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,SAASC,WAAT,QAA4B,OAA5B;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;AAIA,IAAMC,QAAQ,GAAG,uCAAjB;AAEA,IAAMC,UAAU,GAAG;AACfC,EAAAA,IAAI,EAAEF,QADS;AAEfG,EAAAA,OAAO,EAAE;AACPC,IAAAA,EAAE,EAAER,IAAI,EADD;AAEPS,IAAAA,KAAK,EAALA,KAFO;AAGPC,IAAAA,IAAI,EAAJA;AAHO;AAFM,CAAnB;;AASA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAmC;AAAA,MAAlCC,KAAkC,uEAA1BV,YAA0B;AAAA,MAAZW,MAAY;;AACnD,UAAQA,MAAM,CAACP,IAAf;AACI,SAAK,UAAL;AACE,aAAOQ,MAAM,CAACC,MAAP,CACDH,KADC,EACM,EADN,EACU;AAACT,QAAAA,KAAK,EAAGS,KAAK,CAACT,KAAN,CAAYa,MAAZ,CAAmBH,MAAM,CAACN,OAA1B;AAAT,OADV,CAAP;;AAIF;AACE,aAAOK,KAAP;AACF;AARJ;AAUH,CAXD;;AAeA,IAAMK,KAAK,GAAGhB,WAAW,CAACU,WAAD,EAAcT,YAAd,CAAzB;AAEA,SACIe,KADJ,EAEIZ,UAFJ,EAGID,QAHJ","sourcesContent":["import uuid from 'uuid';\nimport { createStore } from 'redux';\n\nconst initialState = {\n    notes: [],\n};\n\nconst ADD_NOTE = '[notes] Add a note to the application';\n\nconst ADD_ACTION = {\n    type: ADD_NOTE,\n    payload: {\n      id: uuid(),\n      title,\n      note\n    }\n};\n\nconst noteReducer = (state = initialState, action ) => {\n    switch (action.type) {\n        case 'ADD_NOTE':\n          return Object.assign(\n                state, {}, {notes : state.notes.concat(action.payload)}\n          );\n        \n        default:\n          return state;\n        break;\n      }\n};\n\n\n\nconst store = createStore(noteReducer, initialState);\n\nexport {\n    store,\n    ADD_ACTION,\n    ADD_NOTE\n};"]},"metadata":{},"sourceType":"module"}